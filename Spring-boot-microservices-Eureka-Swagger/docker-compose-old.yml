version: '3'
#create network by running sudo docker network create --driver bridge frontendnetwork----
# default link in the same network all containers with service name
#sudo docker exec -it configurations-server-v01 ping eureka-service-registry-v01
networks:
 frontendnetwork:   
  external: true
services:
 eureka-service-registry:
  image: 'pc1204a/netflix-eureka-server:v0.1'
  container_name: eureka-service-registry
  hostname: eureka-service-registry
  links:
   - 'mysqldb'
  networks:
   frontendnetwork:   
    #ipv4_address: 172.21.0.10
  ports:
   - '8761:8761'
  depends_on:
   - 'configurations-server'
   - 'mysqldb'
  healthcheck:
   test: ["CMD", "curl", "-f", "http://localhost:8761"]
   interval: 30s
   timeout: 10s
   retries: 5 
 configurations-server:
  image: 'pc1204a/configurations-server:v01'
  container_name: configurations-server
  hostname: configurations-server
  links:
   - 'mysqldb'
  networks:
   frontendnetwork:
    #ipv4_address: 172.21.0.11
  ports:
   - '8282:8282'
  healthcheck:
   test: ["CMD", "curl", "-f", "http://localhost:8282"]
   interval: 30s
   timeout: 10s
   retries: 5
 candidate-service:
  image: 'pc1204a/candidate-service:v01'
  #container_name: candidate-service
  links:
   - 'configurations-server'
   - 'eureka-service-registry'
   - 'mysqldb'
  networks:
   frontendnetwork:
    #ipv4_address: 172.21.0.11
  #expose:
   #- 8181
  ports:
   - '8181-8182:8181'
  depends_on:
   - 'configurations-server'
   - 'eureka-service-registry'
   - 'mysqldb'
 mysqldb:
  image: 'mysql'
  container_name: mysqldb
  restart: always
  command: --lower_case_table_names=0
  ports:
    - '3306:3306'
  environment:
   MYSQL_ROOT_PASSWORD: mysql
   MYSQL_DATABASE: candidate   
   volumes: $HOME/Desktop/candidate.sql:/candidate.sql
  networks:
   frontendnetwork:
